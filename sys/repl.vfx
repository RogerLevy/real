reference repl

\ - History
\ z" sys/data/consolab.ttf" #16 3 al_load_ttf_font constant consolas 
variable hbuf variable s variable l# variable #lines
: init-hbuf 16 allocate drop hbuf ! ; init-hbuf 
: >hbuf s @ >r dup s +! hbuf @ s @ resize drop dup hbuf ! r> + swap move ;
: top hbuf @ s @ l# @ 0 ?do 10 scan 1 /string loop drop ;
: ?type dup if type else 2drop then ;
: nl 0 pen cell+ @ 16 + at ;
: lines ( a # - )
    s @ swap 0 ?do
        z[ 10 csplit ?type ]z text
        nl 1 /string over c@ 0= if unloop 2drop exit then
    loop 2drop
;
z" sys/data/MxPlus_IBM_VGA_8x16.ttf" #16 3 font: ibm8x16.fnt
c: *history draw> ibm8x16.fnt font ! 1 1 at black top 100 lines 0 0 at white top 100 lines ;

\ - History Device
: Emit-history  drop  >r rp@ 1 >hbuf r> drop ;
: Type-history  drop  >hbuf ;
: CR-history  10 swap emit-history  1 #lines +! ;
create history-vectors
  ' drop ,
  ' drop ,
  ' drop ,
  ' drop ,
  ' drop ,
  ' drop ,
  ' drop ,
  ' drop ,
  ' drop ,
  ' Emit-history ,
  ' drop ,
  ' Type-history ,
  ' CR-history ,
  ' drop ,
  ' drop ,
  ' drop ,
  ' drop ,
  ' drop ,
  ' drop ,
  ' drop ,
  ' drop ,
  ' drop ,
  ' drop ,
  ' drop ,
  ' drop ,
create histdev 0 , history-vectors ,
0 value old-dev
: history[  op-handle @ to old-dev  histdev op-handle ! ;
: ]history  old-dev op-handle ! ; 

motif var eh +basis
: (respond>) r> eh ! ; : respond> postpone (respond>) discard-sinline ; immediate
: respond halt @ ?; eh @ ?execute me each> recurse ;

z" sys/data/Mx437_SperryPC_8x16.ttf" #16 3 font: sherry16.fnt 
z" sys/data/Mx437_SperryPC_8x16.ttf" #32 3 font: sherry32.fnt 

: h. ." $" base @ swap hex . base ! ;
: .s depth | d | d for d 1 - i - pick . loop cr ; \ .fs ;
: p.s depth | d | d for d 1 - i - pick p. loop cr ; \ .fs ;
: ?type ?dup 0= if drop else type then ;
: .tib ." >" tib #tib @ ?type counter 200 / 1 and if ." _" then ;
: obey ( >vfx >display )  cr tib #tib @ ?type   ."  >>> "   ['] interpret catch .throw   refill drop ;
: ?charkey  
    alt? if drop exit then
    case
        ( bksp ) 8 of #tib @ 0; -1 #tib +! exit endof
        ( tab ) 9 of exit endof
        ( enter ) 13 of history[ obey ]history exit endof
        ( esc ) 27 of exit endof
    dup-endcase
    dup 32 < over 127 = or if drop exit then
    tib #tib @ + c! 1 #tib +!
;

root value uime
variable uiosp
bpage uios uios uiosp !
: repl-events
    me >r uime in
    osp @ >r uiosp @ osp !
    ALLEGRO_EVENT_KEY_CHAR happened? if
        the-char ?charkey
    then
    osp @ uiosp ! r> osp !
    me to uime r> in
;

: bar blue winw 64 rectf ;
: ]z. ]z text ; 
: bar-text sherry32.fnt font !   white z[ .s ]z.   nr   z[ .tib ]z. ;

c: *cmd
    act>
        0 winh 64 - s>p x v!
    draw>
        me parent @ push \ always on top
        -matte bar bar-text
;

root {
    0 0 at *generic named repl {
        *cmd named cmd { }
        *history named history { }
    }
}

\ - Global events
:noname [ is events ]
    ALLEGRO_EVENT_KEY_DOWN happened? if
        the-key <tab> = if repl toggle then
    then
    repl-events
;